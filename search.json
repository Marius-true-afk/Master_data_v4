[
  {
    "objectID": "Biologiske variabler_v2.html.html",
    "href": "Biologiske variabler_v2.html.html",
    "title": "Biologiske variabler_v2",
    "section": "",
    "text": "0.1 Biologiske variabler oppdatert 25.09\nI dette dokumentet undersøker jeg hvordan biologiske variabler endrer seg over tid. Disse variablene er lengde, vekt, alder, kjønnsratio.\n\n0.1.1 Lengde\n\nlibrary(dplyr)\nlibrary(sf)\nlibrary(tidyverse)\n\nherring_data &lt;- readRDS(\"herring_data.rds\")\n\nherring_grouped_decades &lt;- herring_data |&gt; \n  mutate(decade = cut(\n    year,\n    breaks = c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2019),\n    labels = c(\"1935-1945\", \"1946-1955\", \"1956-1965\", \"1966-1975\",\n               \"1976-1985\", \"1986-1995\", \"1996-2005\", \"2006-2015\", \"2016-2019\"),\n    include.lowest = TRUE,  # inkluderer grenseåret 1935\n    right = TRUE    #sørger for interval på formen (a,b])\n  ))\n\nggplot(herring_grouped_decades, aes(x = decade, y = length)) +\n  geom_boxplot(fill = \"skyblue\", alpha = 0.6) +\n  labs(\n    title = \"Variation in Herring Length across Timeperiode (Decade)\",\n    x = \"Decade\",\n    y = \"Length (cm)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n0.1.2 Vekt\n\nlibrary(dplyr)\nlibrary(sf)\nlibrary(tidyverse)\n\nherring_data &lt;- readRDS(\"herring_data.rds\")\n\nherring_decades_weight &lt;- herring_data |&gt; \n  mutate(decade = cut(\n    year,\n    breaks = c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2019),\n    labels = c(\"1935-1945\", \"1946-1955\", \"1956-1965\", \"1966-1975\",\n               \"1976-1985\", \"1986-1995\", \"1996-2005\", \"2006-2015\", \"2016-2019\"),\n    include.lowest = TRUE,  # inkluderer grenseåret 1935\n    right = TRUE    #sørger for interval på formen (a,b])\n  ))\n\nggplot(herring_decades_weight, aes(x = decade, y = weight)) +\n  geom_boxplot(fill = \"pink\", alpha = 0.6) +\n  labs(\n    title = \"Variation in Herring Length across Timeperiode (Decade)\",\n    x = \"Decade\",\n    y = \"Weight (gram)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n0.1.3 Alder\n\nlibrary(dplyr)\nlibrary(sf)\nlibrary(tidyverse)\n\nherring_data &lt;- readRDS(\"herring_data.rds\")\n\nherring_decades_age &lt;- herring_data |&gt; \n  mutate(decade = cut(\n    year,\n    breaks = c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2019),\n    labels = c(\"1935-1945\", \"1946-1955\", \"1956-1965\", \"1966-1975\",\n               \"1976-1985\", \"1986-1995\", \"1996-2005\", \"2006-2015\", \"2016-2019\"),\n    include.lowest = TRUE,  # include boundary years\n    right = TRUE    #intervales with form (a,b])\n  ))\n\nggplot(herring_decades_age, aes(x = decade, y = age)) +\n  geom_boxplot(fill = \"lightgrey\", alpha = 0.6) +\n  labs(\n    title = \"Variation in Herring Length by Timeperiode (Decade)\",\n    x = \"Decade\",\n    y = \"Age (years)\"\n  ) +\n  scale_y_continuous(n.breaks = 13) + #antall streker på y-akse\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n0.1.4 Kjønnsratio\nHer starter jeg med å inndele “sex” fra rådata til å vise fordeling av kjønn per år. Deretter viser jeg fordeling av kjønn per tiår over antall individer og kjønnsratio.\nI denne koden antar jeg at 1 = hankjønn, 2 = hunkjønn, 4 = feilregistert og NA = ikke registrert.\n\nlibrary(dplyr)\nlibrary(tidyr)\n\n#ifelse statement\n#https://www.youtube.com/watch?v=zose3lQAN7o\n#https://stackoverflow.com/questions/66173100/how-to-use-ifelse-statements-in-r\n\n\nherring_data &lt;- readRDS(\"herring_data.rds\")\n\nsex_year_wide &lt;- herring_data |&gt;\n  mutate(sex_chr = ifelse(is.na(sex), \"NA\", as.character(sex))) |&gt; # if there is no sex listed, return \"NA\", else return the data as a character\n  group_by(year, sex_chr) |&gt;\n  summarise(n = n(), .groups = \"drop\") |&gt; # teller antall rader 1,2,4 og NA forekommer\n  pivot_wider(names_from = sex_chr, values_from = n, values_fill = 0) # Fyller rader som ellers returnerer NA med 0 slik at man summere over radene senere\n\nshow(sex_year_wide)\n\n# A tibble: 83 × 5\n    year  `NA`   `1`   `2`   `4`\n   &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1  1935  2516     0     0     0\n 2  1936  1932     0     0     0\n 3  1937  2181     0     0     0\n 4  1938  1255     0     0     0\n 5  1939  1331     0     0     0\n 6  1940  1384     0     0     0\n 7  1941   699     0     0     0\n 8  1944    71  2109  2145     0\n 9  1945   972  2322  2121     0\n10  1946     1  2660  2193     0\n# ℹ 73 more rows\n\n\nI denne koden må jeg endre årstallene utfra sex_year_wider og finne optimale 10 år for å demonstrere trender.\n\nlibrary(dplyr)\nlibrary(ggplot2)\n\nherring_data &lt;- readRDS(\"herring_data.rds\")\n\n# Teller antall individer per tiår og fordelt på kjønn\nherring_counts &lt;- herring_data |&gt;\n  filter(sex %in% c(1, 2)) |&gt;   # beholder kun hankjønn og hunkjønn\n  mutate(\n    decade = cut(\n      year,\n      breaks = c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2019),\n      labels = c(\"1935-1945\", \"1946-1955\", \"1956-1965\", \"1966-1975\",\n                 \"1976-1985\", \"1986-1995\", \"1996-2005\", \"2006-2015\", \"2016-2019\"),\n      include.lowest = TRUE\n    ),\n    sex = recode_factor(sex, `1` = \"Male\", `2` = \"Female\") # 1 = Male, 2 = Female\n  ) |&gt;\n  count(decade, sex)   # teller antall rader for hver kombinasjon\n\n# Plot to linjer – en for menn og en for kvinner\nggplot(herring_counts, aes(x = decade, y = n, color = sex, group = sex)) +\n  geom_line(linewidth = 1) +\n  geom_point(size = 2) +\n  scale_color_manual(\n    values = c(\"Male\" = \"steelblue\", \"Female\" = \"pink1\")) +\n  labs(\n    title = \"Amount of males and females per decade\",\n    x = \"Decade\",\n    y = \"Number of individuals\",\n    color = \"Gender\"\n  ) +\n  scale_y_continuous(n.breaks = 20) + #antall streker på y-akse\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45), hjust = 1.5)\n\n\n\n\n\n\n\n\n\nlibrary(dplyr)\nlibrary(sf)\nlibrary(tidyverse)\n\nherring_data &lt;- readRDS(\"herring_data.rds\")\n\nherring_ratio_line &lt;- herring_data |&gt;\n  filter(sex %in% c(1, 2)) |&gt;\n  mutate(\n    decade = cut(\n      year,\n      breaks = c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2019),\n      labels = c(\"1935-1945\", \"1946-1955\", \"1956-1965\", \"1966-1975\",\n                 \"1976-1985\", \"1986-1995\", \"1996-2005\", \"2006-2015\", \"2016-2019\"),\n      include.lowest = TRUE)\n  ) |&gt;\n  group_by(decade) |&gt;\n  summarise(\n    proportion_males = mean(sex == 1, na.rm = TRUE)\n  )\n\nggplot(herring_ratio_line, aes(x = decade, y = proportion_males, group = 1)) +\n  geom_line(color = \"steelblue\", linewidth = 1) +\n  geom_point(color = \"steelblue\", size = 2) +\n  scale_y_continuous(labels = scales::percent_format()) +\n  labs(\n    title = \"Proportion of males per decade\",\n    x = \"Decade\",\n    y = \"Sex ratio of males (%)\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "Søylediagram.html",
    "href": "Søylediagram.html",
    "title": "Søylediagram",
    "section": "",
    "text": "Standard søylediagram\nAntall prøvetatt fisk per år (e. eks. søylediagram). Vurder log-skala på y-aksen hvis forskjellene mellom år går over flere størrelsesordener. \n\n#Used for help creating bar chart: https://www.storybench.org/create-barplot-r/\nlibrary(dplyr)\n\n# Leser av CSV filen\nherring_bar_raw_data &lt;- read.csv(file = \"HerringData.csv\")\n#names(Herring_bar_graph)\n\n#En tibble 6x2 som viser hvor mange datapunkter per år\nherring_bar_clean_data &lt;- herring_bar_raw_data |&gt; \n  mutate(\n    year = as.numeric(year),\n    id = as.numeric(id)\n  ) |&gt; \n  select(id,year) |&gt; \n  group_by(year) |&gt; \n  summarise(total_fish_caught = n())\n\n# --------------------------- BAR GRAPH --------------------------- \n#$ Extract or Replace Parts of an Object -- Operators acting on vectors, matrices, arrays and lists to extract or replace parts.\n\n#From max/min total_fish_caught command &lt;- 16518 / 648 individual fish \n\nsamples &lt;- herring_bar_clean_data$total_fish_caught\nyear &lt;- herring_bar_clean_data$year\n\nbarplot(samples,                # height of the bar chart\n        names.arg = year,      # labels for the x-axis\n        ylim = c(500, 17000),\n        las = 2,                # labes of Axis Style\n        cex.names = 0.6,        # Expansion factor of labels\n        col = \"steelblue\",\n        main = \"Number of Herring Data Points per Year\",\n        xlab = \"Year\",\n        ylab = \"Individual sampled fish each year\")\n\n\n\n\n\n\n\n\nLogaritmisk søylediagram\n\n#tried to implement fig.width into {r} without any apparent improvement\n#Problem: Years on the x-axis is unreadable. Pair close by years to show trend?\n\nlibrary(dplyr)\n\n# Leser av CSV filen\nherring_bar_raw_data &lt;- read.csv(file = \"HerringData.csv\")\n#names(Herring_bar_graph)\n\n#En tibble 6x2 som viser hvor mange datapunkter per år\nherring_bar_clean_data &lt;- herring_bar_raw_data |&gt; \n  mutate(\n    year = as.numeric(year),\n    id = as.numeric(id)\n  ) |&gt; \n  select(id,year) |&gt; \n  group_by(year) |&gt; \n  summarise(total_fish_caught = n())\n\n# --------------------------- LOGARITHMIC BAR GRAPH ---------------------------\nlibrary(ggplot2)\n\nggplot(herring_bar_clean_data, aes(x = factor(year), y = total_fish_caught)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  scale_y_sqrt() +  # Tried scale_y_sqrt and scale_y_log10\n  labs(\n    title = \"Number of Herring Data Points per Year\",\n    x = \"Year\",\n    y = \"total_fish_caughtuency (log scale)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n# A tibble: 1 × 2\n  total_catch n_year\n        &lt;int&gt;  &lt;int&gt;\n1      412349     85"
  },
  {
    "objectID": "1109_data_behandling.html",
    "href": "1109_data_behandling.html",
    "title": "Kladde kode for diverse figurer",
    "section": "",
    "text": "#install.packages(c(\"ggplot2\", \"dplyr\", \"maps\", \"stringr\", \"here\"))\n\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(maps)\nlibrary(stringr)\nlibrary(here)\nlibrary(tidyverse)\n\nherring_data_raw &lt;- read_csv(\n  here(\"HerringData.csv\")) #currently stored as chr\n\nherring_data &lt;- herring_data_raw |&gt; \n  mutate(\n    lat = as.numeric(lat),\n    long = as.numeric(lon)\n  )\n#herring_data\n\nGeografisk fordeling. Plott posisjon (lengdegrad / breddegrad) til prøvene på #et kart. Her vil du nok se at det er mange fisk tatt på én posisjon. #Da trenger du bare plotte de unike posisjonene\n\nunique_lat &lt;- unique(herring_data$lat) #$ used to access a column of a data frame\n#unique_lat\n\nunique_lon &lt;- unique(herring_data$lon)\n#unique_lon\n\n\n#install.packages(\"prettymapr\")\n#install.packages(\"ggspatial\")\n#install.packages(\"rnaturalearth\")\n#install.packages(\"rnaturalearthdata\")\n#install.packages(\"maps\")\nlibrary(ggplot2)\nlibrary(sf)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(ggspatial)\nlibrary(prettymapr)\nlibrary(dplyr)\n\nherring_data &lt;- herring_data[!is.na(herring_data$lon) & !is.na(herring_data$lat), ]\n\naquaculture &lt;- st_as_sf(herring_data, coords = c(\"lon\", \"lat\"), crs = 4326)\n\n# with rnaturalearth\neurope &lt;- ne_countries(continent = \"Europe\", returnclass = \"sf\")\nggplot() +\n  geom_sf(data = europe) +\n  geom_sf(data = aquaculture, colour = \"red\") +\n  coord_sf(xlim = c(0, 30), ylim = c(55, 74))\n\n\n\n\n\n\n\n\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(prettymapr)\nlibrary(maps)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\n\n# get Europe boundaries as sf object\neurope &lt;- ne_countries(continent = \"Europe\", returnclass = \"sf\")\n\n# plot Europe + your aquaculture data\nggplot() +\n  geom_sf(data = europe, fill = \"antiquewhite\") +\n  geom_sf(data = aquaculture, color = \"blue\", size = 2) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\n\n#Leser CSV filen\nherring_data &lt;- read_csv(\"HerringData.csv\")\n\n#Sørger for at lon og lat blir oppfattet som tall framfor tegn\nherring_clean &lt;- herring_data |&gt; \n  mutate(\n    lon = as.numeric(lon),\n    lat = as.numeric(lat)\n  ) |&gt; \n  # Fjerner rader som mangler koordinater. !is.na() returnerer TRUE for gyldige rader\n  filter(!is.na(lon), !is.na(lat)) |&gt; \n  # Passer på at unike rader er paret\n  distinct(lon, lat, .keep_all = TRUE)\n\n# Konventerer \"data frame\" til \"sf-objekt\" for å behandle geografisk data\naquaculture &lt;- st_as_sf(herring_clean, coords = c(\"lon\", \"lat\"), crs = 4326)\n\n# Bruker Europa som bakgrunnskart\neurope &lt;- ne_countries(continent = \"Europe\", returnclass = \"sf\")\n\n# Plotter kartet med punkt størrelse 2, farget blått med transparens på 0.7\nggplot() +\n  geom_sf(data = europe, fill = \"antiquewhite\", color = \"gray60\") +\n  geom_sf(data = aquaculture, color = \"blue\", size = 2, alpha = 0.7) +\n  coord_sf(xlim = c(-30, 60), ylim = c(35, 100), expand = FALSE) +\n  theme_minimal() +\n  labs(x = \"Longitude\", y = \"Latitude\")\n\n\n\n\n\n\n\n\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\n\n# Leser CSV filen\nherring_data &lt;- read_csv(\"HerringData.csv\")\n\n# Sørger for at lon og lat blir oppfattet som tall framfor tegn\nherring_clean &lt;- herring_data |&gt; \n  mutate(\n    lon = as.numeric(lon),\n    lat = as.numeric(lat)\n  ) |&gt; \n    # Fjerner rader som mangler koordinater. !is.na() returnerer TRUE for gyldige rader\n  filter(!is.na(lon), !is.na(lat)) |&gt; \n  # Passer på at unike rader er paret\n  distinct(lon, lat, .keep_all = TRUE)\n\n# Konventerer \"data frame\" til \"sf-objekt\" for å behandle geografisk data\naquaculture &lt;- st_as_sf(herring_clean, coords = c(\"lon\", \"lat\"), crs = 4326)\n\n# Bruker Europa som bakgrunnskart\neurope &lt;- ne_countries(continent = \"Europe\", returnclass = \"sf\")\n\n# Plotter kartet med punkt størrelse 2, farget blått med transparens på 0.7\nggplot() +\n  geom_sf(data = europe, fill = \"antiquewhite\", color = \"gray60\") +\n  geom_density_2d_filled(\n    data = st_coordinates(aquaculture) |&gt;  \n    as.data.frame(),\n    aes(X, Y),\n    alpha = 0.7\n  ) +\n   coord_sf(xlim = c(0, 30), ylim = c(55, 76)) +\n  theme_minimal() +\n   labs(\n    title = \"Herring data\",\n    subtitle = \"Density of unique sampling points\",\n    x = \"Longitude\",\n    y = \"Latitude\",\n    fill = \"Point Density\"\n   )\n\n\n\n\n\n\n\n\n\nread_lines(here(\"HerringData.csv\"), n_max = 5)\n\n[1] \"\\\"id\\\",\\\"year\\\",\\\"month\\\",\\\"serialno\\\",\\\"vesselcode\\\",\\\"gear\\\",\\\"lat\\\",\\\"lon\\\",\\\"area\\\",\\\"locality\\\",\\\"indno\\\",\\\"weight\\\",\\\"length\\\",\\\"sex\\\",\\\"maturity\\\",\\\"age\\\"\"\n[2] \"\\\"19354\\\",1935,1,4,.,4000,62.25,0.833333333,7,\\\"33\\\",1,340,35,.,4,13\"                                                                                             \n[3] \"\\\"19356\\\",1935,1,6,.,4000,66.46666667,13.5,6,\\\"33\\\",1,170,29,.,3,5\"                                                                                               \n[4] \"\\\"193516\\\",1935,1,16,.,4000,62.25,5,7,\\\"33\\\",2,170,29,.,4,5\"                                                                                                      \n[5] \"\\\"193516\\\",1935,1,16,.,4000,62.25,5,7,\\\"33\\\",3,180,30,.,3,5\""
  },
  {
    "objectID": "Biologiske_variabler_v2.html",
    "href": "Biologiske_variabler_v2.html",
    "title": "Biologiske variabler_v2",
    "section": "",
    "text": "0.1 Biologiske variabler oppdatert 25.09\nI dette dokumentet undersøker jeg hvordan biologiske variabler endrer seg over tid. Disse variablene er lengde, vekt, alder, kjønnsratio.\n\n0.1.1 Lengde\n\nlibrary(dplyr)\nlibrary(sf)\nlibrary(tidyverse)\n\nherring_data &lt;- readRDS(\"herring_data.rds\")\n\nherring_grouped_decades &lt;- herring_data |&gt; \n  mutate(decade = cut(\n    year,\n    breaks = c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2019),\n    labels = c(\"1935-1945\", \"1946-1955\", \"1956-1965\", \"1966-1975\",\n               \"1976-1985\", \"1986-1995\", \"1996-2005\", \"2006-2015\", \"2016-2019\"),\n    include.lowest = TRUE,  # inkluderer grenseåret 1935\n    right = TRUE    #sørger for interval på formen (a,b])\n  ))\n\nggplot(herring_grouped_decades, aes(x = decade, y = length)) +\n  geom_boxplot(fill = \"skyblue\", alpha = 0.6) +\n  labs(\n    title = \"Variation in Herring Length across Timeperiode (Decade)\",\n    x = \"Decade\",\n    y = \"Length (cm)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n0.1.2 Vekt\n\nlibrary(dplyr)\nlibrary(sf)\nlibrary(tidyverse)\n\nherring_data &lt;- readRDS(\"herring_data.rds\")\n\nherring_decades_weight &lt;- herring_data |&gt; \n  mutate(decade = cut(\n    year,\n    breaks = c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2019),\n    labels = c(\"1935-1945\", \"1946-1955\", \"1956-1965\", \"1966-1975\",\n               \"1976-1985\", \"1986-1995\", \"1996-2005\", \"2006-2015\", \"2016-2019\"),\n    include.lowest = TRUE,  # inkluderer grenseåret 1935\n    right = TRUE    #sørger for interval på formen (a,b])\n  ))\n\nggplot(herring_decades_weight, aes(x = decade, y = weight)) +\n  geom_boxplot(fill = \"pink\", alpha = 0.6) +\n  labs(\n    title = \"Variation in Herring Length across Timeperiode (Decade)\",\n    x = \"Decade\",\n    y = \"Weight (gram)\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n0.1.3 Alder\n\nlibrary(dplyr)\nlibrary(sf)\nlibrary(tidyverse)\n\nherring_data &lt;- readRDS(\"herring_data.rds\")\n\nherring_decades_age &lt;- herring_data |&gt; \n  mutate(decade = cut(\n    year,\n    breaks = c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2019),\n    labels = c(\"1935-1945\", \"1946-1955\", \"1956-1965\", \"1966-1975\",\n               \"1976-1985\", \"1986-1995\", \"1996-2005\", \"2006-2015\", \"2016-2019\"),\n    include.lowest = TRUE,  # include boundary years\n    right = TRUE    #intervales with form (a,b])\n  ))\n\nggplot(herring_decades_age, aes(x = decade, y = age)) +\n  geom_boxplot(fill = \"lightgrey\", alpha = 0.6) +\n  labs(\n    title = \"Variation in Herring Length by Timeperiode (Decade)\",\n    x = \"Decade\",\n    y = \"Age (years)\"\n  ) +\n  scale_y_continuous(n.breaks = 13) + #antall streker på y-akse\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n0.1.4 Kjønnsratio\nHer starter jeg med å inndele “sex” fra rådata til å vise fordeling av kjønn per år. Deretter viser jeg fordeling av kjønn per tiår over antall individer og kjønnsratio.\nI denne koden antar jeg at 1 = hankjønn, 2 = hunkjønn, 4 = feilregistert og NA = ikke registrert.\n\nlibrary(dplyr)\nlibrary(tidyr)\n\n#ifelse statement\n#https://www.youtube.com/watch?v=zose3lQAN7o\n#https://stackoverflow.com/questions/66173100/how-to-use-ifelse-statements-in-r\n\n\nherring_data &lt;- readRDS(\"herring_data.rds\")\n\nsex_year_wide &lt;- herring_data |&gt;\n  mutate(sex_chr = ifelse(is.na(sex), \"NA\", as.character(sex))) |&gt; # if there is no sex listed, return \"NA\", else return the data as a character\n  group_by(year, sex_chr) |&gt;\n  summarise(n = n(), .groups = \"drop\") |&gt; # teller antall rader 1,2,4 og NA forekommer\n  pivot_wider(names_from = sex_chr, values_from = n, values_fill = 0) # Fyller rader som ellers returnerer NA med 0 slik at man summere over radene senere\n\nshow(sex_year_wide)\n\n# A tibble: 83 × 5\n    year  `NA`   `1`   `2`   `4`\n   &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1  1935  2516     0     0     0\n 2  1936  1932     0     0     0\n 3  1937  2181     0     0     0\n 4  1938  1255     0     0     0\n 5  1939  1331     0     0     0\n 6  1940  1384     0     0     0\n 7  1941   699     0     0     0\n 8  1944    71  2109  2145     0\n 9  1945   972  2322  2121     0\n10  1946     1  2660  2193     0\n# ℹ 73 more rows\n\n\nI denne koden må jeg endre årstallene utfra sex_year_wider og finne optimale 10 år for å demonstrere trender.\n\nlibrary(dplyr)\nlibrary(ggplot2)\n\nherring_data &lt;- readRDS(\"herring_data.rds\")\n\n# Teller antall individer per tiår og fordelt på kjønn\nherring_counts &lt;- herring_data |&gt;\n  filter(sex %in% c(1, 2)) |&gt;   # beholder kun hankjønn og hunkjønn\n  mutate(\n    decade = cut(\n      year,\n      breaks = c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2019),\n      labels = c(\"1935-1945\", \"1946-1955\", \"1956-1965\", \"1966-1975\",\n                 \"1976-1985\", \"1986-1995\", \"1996-2005\", \"2006-2015\", \"2016-2019\"),\n      include.lowest = TRUE\n    ),\n    sex = recode_factor(sex, `1` = \"Male\", `2` = \"Female\") # 1 = Male, 2 = Female\n  ) |&gt;\n  count(decade, sex)   # teller antall rader for hver kombinasjon\n\n# Plot to linjer – en for menn og en for kvinner\nggplot(herring_counts, aes(x = decade, y = n, color = sex, group = sex)) +\n  geom_line(linewidth = 1) +\n  geom_point(size = 2) +\n  scale_color_manual(\n    values = c(\"Male\" = \"steelblue\", \"Female\" = \"pink1\")) +\n  labs(\n    title = \"Amount of males and females per decade\",\n    x = \"Decade\",\n    y = \"Number of individuals\",\n    color = \"Gender\"\n  ) +\n  scale_y_continuous(n.breaks = 20) + #antall streker på y-akse\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45), hjust = 1.5)\n\n\n\n\n\n\n\n\n\nlibrary(dplyr)\nlibrary(sf)\nlibrary(tidyverse)\n\nherring_data &lt;- readRDS(\"herring_data.rds\")\n\nherring_ratio_line &lt;- herring_data |&gt;\n  filter(sex %in% c(1, 2)) |&gt;\n  mutate(\n    decade = cut(\n      year,\n      breaks = c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2019),\n      labels = c(\"1935-1945\", \"1946-1955\", \"1956-1965\", \"1966-1975\",\n                 \"1976-1985\", \"1986-1995\", \"1996-2005\", \"2006-2015\", \"2016-2019\"),\n      include.lowest = TRUE)\n  ) |&gt;\n  group_by(decade) |&gt;\n  summarise(\n    proportion_males = mean(sex == 1, na.rm = TRUE)\n  )\n\nggplot(herring_ratio_line, aes(x = decade, y = proportion_males, group = 1)) +\n  geom_line(color = \"steelblue\", linewidth = 1) +\n  geom_point(color = \"steelblue\", size = 2) +\n  scale_y_continuous(labels = scales::percent_format()) +\n  labs(\n    title = \"Proportion of males per decade\",\n    x = \"Decade\",\n    y = \"Sex ratio of males (%)\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Master_data_v4",
    "section": "",
    "text": "Klikk på en side for å åpne HTML-versjonen.\n\n\n1109 databehandling\nDatabehandling – HTML\n\n\nBegrensinger av datasett\nProsjektside – HTML\n\n\nBiologiske_variabler_v2\nAnalyse – HTML\n\n\nSøylediagram\nFigur – HTML\n\n\nTetthetskart\nKart – HTML"
  },
  {
    "objectID": "Begrensninger_av_datasett.html",
    "href": "Begrensninger_av_datasett.html",
    "title": "Begrensninger av datasett",
    "section": "",
    "text": "0.0.1 Justification and need for limiting data points\nFor å meningsfult analysere datasettet og hente ut mønstre/trekk fra ulike perspektiv i rom og tid, er det nødvending å begrense datasettet. Fra figuren nedenfor ser man hvordan rå-datapunktene fordeler seg utover verdenskartet.\n\n\n0.0.2 Distribution of datapoints across world map\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(maps)\nlibrary(stringr)\nlibrary(here)\nlibrary(sf)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(ggspatial)\nlibrary(prettymapr)\n\nherring_data_raw &lt;- read.csv(\n  here(\"HerringData.csv\")) #currently stored as chr\n\nherring_data_sorted &lt;- herring_data_raw |&gt; \n  mutate(\n    lat = as.numeric(lat),\n    lon = as.numeric(lon)\n  )\n\nherring_data_clean &lt;- herring_data_sorted[!is.na(herring_data_sorted$lon) & !is.na(herring_data_sorted$lat), ]\n\nherring_data_ready &lt;- st_as_sf(herring_data_clean, coords = c(\"lon\", \"lat\"), crs = 4326)\n\n# with rnaturalearth\neurope &lt;- ne_countries(continent = \"Europe\", returnclass = \"sf\")\nggplot() +\n  geom_sf(data = europe) +\n  geom_sf(data = herring_data_ready, colour = \"red\") +\n  #coord_sf(xlim = c(0, 30), ylim = c(55, 74))\n  coord_sf(xlim = c(-21, 50), ylim = c(5, 81))\n\n\n\n\n\n\n\n\n\n\n0.0.3 Distribution of data points inside bounding box\nFra datasettet (URL: https://doi.org/10.21335/NMDC-496562593) finner man boundingboxWKT: POLYGON((49.9 56.9,-21.9 56.9,-21.9 77.1,49.9 77.1,49.9 56.9)).\n\nSom vi ser fra figuren over verdenskartet, er det åpenbart visse punkt som overskrider polygonet angitt av metadataen. Neste steg blir dermed å analysere datasettet for å finne eventuelle avvik. Innledningvis er det enkelt å filtrere ut punkter utenfor det angitte polygonet. Utover dette er det nødvending å eliminere eventuelle datapunkt som treffer land. Disse må fjernes fra datasettet før videre behandling.\nAntall datapunkter\nLand & hav: 406 016\nHav: 343 900\nDifferanse = 62 116\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\n\n# Definer yttergrenser\nlon_min &lt;- -21.9\nlon_max &lt;- 49.9\nlat_min &lt;- 56.9\nlat_max &lt;- 77.1\n\n# Last data\nherring_data &lt;- read_csv(\"HerringData.csv\") |&gt; \n  select(lon, lat) |&gt; \n  mutate(\n    lat = as.numeric(lat),\n    lon = as.numeric(lon)\n  ) |&gt; \n  filter(\n    !is.na(lat) & !is.na(lon),\n    lon &gt;= lon_min & lon &lt;= lon_max,\n    lat &gt;= lat_min & lat &lt;= lat_max\n  )\n\n# Bakgrunnskart\neurope &lt;- ne_countries(continent = \"Europe\", returnclass = \"sf\")\n\n# Omvender df -&gt; sf\nherring_sf &lt;- st_as_sf(herring_data, coords = c(\"lon\", \"lat\"), crs = 4326)\n\n# Slår av s2 for å unngå feil i kryssning mellom land/hav: https://r.geocompx.org/spatial-class section 2.2.9\nsf_use_s2(FALSE)\n\n# Sjekker om hvert punkt av herring_sf krysser _minst_ et land i europa. Krysser det _minst_ et land returneres TRUE\n# info om spare = FALSE: https://r-spatial.github.io/sf/reference/geos_binary_pred.html\non_land &lt;- rowSums(st_intersects(herring_sf, europe, sparse = FALSE)) &gt; 0\n\n# Filtrer vekk punkter som ligger på land\nherring_sf_ocean &lt;- herring_sf[!on_land, ]\n\n# Lagrer ferdig behandlet kode\nsave(herring_sf_ocean, file = \"herring_data_clean.rda\")\n\n# Kart\nggplot() +\n  geom_sf(data = europe, fill = \"antiquewhite\", color = \"gray60\") +\n  geom_sf(data = herring_sf, color = \"red\", alpha = 0.7, size = 1) +\n  geom_sf(data = herring_sf_ocean, color = \"blue\", alpha = 0.7, size = 1) +\n  coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +\n  theme_minimal() +\n  labs(\n    title = \"Spatial location of Herring datapoints\",\n    subtitle = \"Red = Land, Blue = Ocean\",\n    x = \"Longitude\",\n    y = \"Latitude\"\n  )\n\n\n\n\n\n\n\n\n\n\n0.0.4 Locating unwanted data points marked inside bounding box\nForsøker meg på å opprette en buffer for å eventuelle ikke miste gyldige punkt\nURL: https://www.youtube.com/watch?v=ljZOyxo7QDQ\nKlarte ikke å benytte meg av ESPG:3857 web mercator for å opprette en buffer på 5km. Tror problemet er omvending fra grader til kilometer.\nEn annen løsning er å danne et multipolygon for punktene som tydelig er innenlands og kun fjerne dem. Da beholder man punktene langs kysten som “muligens” er gyldige.\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\n\n# Definer yttergrenser\nlon_min &lt;- -21.9\nlon_max &lt;- 49.9\nlat_min &lt;- 56.9\nlat_max &lt;- 77.1\n\n# Lesing av csv fil\nherring_data &lt;- read_csv(\"HerringData.csv\") |&gt; \n  select(lon, lat) |&gt; \n  mutate(\n    lat = as.numeric(lat),\n    lon = as.numeric(lon)\n  ) |&gt; \n  filter(\n    !is.na(lat) & !is.na(lon),\n    lon &gt;= lon_min & lon &lt;= lon_max,\n    lat &gt;= lat_min & lat &lt;= lat_max\n  )\n\n# Omformer df -&gt; sf\nherring_sf &lt;- st_as_sf(herring_data, coords = c(\"lon\", \"lat\"), crs = 4326)\n\n# Lager polygoner av datapunkt som jeg ønsker å fjerne\npoly_norway_russia &lt;- st_polygon(list(rbind(\n  c(11.4, 57.6),\n  c(11.4, 62.8), \n  c(50.0, 62.8),  \n  c(50.0, 57.6),  \n  c(11.4, 57.6)   \n)))\n\npoly_northern_norway &lt;- st_polygon(list(rbind(\n  c(23.1, 68.6),\n  c(23.1, 68.0),\n  c(24.7, 68.0),\n  c(24.7, 68.6),\n  c(23.1, 68.6)\n  \n)))\n\nunwanted_datapoints &lt;- st_sfc(poly_norway_russia, poly_northern_norway, crs = 4326)\n\n# Kutter ut datapunkt i polygonene fra datasettet\ninside_unwanted_datapoints &lt;- st_intersects(herring_sf, unwanted_datapoints, sparse = FALSE)\nherring_sf_ocean &lt;- herring_sf[!apply(inside_unwanted_datapoints, 1, any), ]\n\n# Bakgrunnskart\neurope &lt;- ne_countries(continent = \"Europe\", returnclass = \"sf\")\n\n# Plot\nggplot() +\n  geom_sf(data = europe, fill = \"antiquewhite\", color = \"gray60\") +\n  geom_sf(data = herring_sf, color = \"red\", alpha = 0.7, size = 1) +\n  geom_sf(data = unwanted_datapoints, fill = NA, color = \"black\", linetype = \"dashed\") +\n  coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +\n  theme_minimal() +\n  labs(\n    title = \"Spatial location of Herring datapoints\",\n    subtitle = \"Red = Land, Blue = Ocean\",\n    x = \"Longitude\",\n    y = \"Latitude\"\n  )\n\n\n\n\n\n\n\n\n\n\n0.0.5 Finished plot and datasett\nFerdigbehandlet plot med ønskede datapunkter fjernet.\nObservasjoner i rå data (herring_sf) = 405 824\nAntall datapunkter fjernet: 406 016 - 405 824 = 192\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\n\n# Definer yttergrenser\nlon_min &lt;- -21.9\nlon_max &lt;- 49.9\nlat_min &lt;- 56.9\nlat_max &lt;- 77.1\n\n# Lager polygoner av datapunkt som jeg ønsker å fjerne\npoly_norway_russia &lt;- st_polygon(list(rbind(\n  c(11.4, 57.6),\n  c(11.4, 62.8), \n  c(50.0, 62.8),  \n  c(50.0, 57.6),  \n  c(11.4, 57.6)   \n)))\n\npoly_northern_norway &lt;- st_polygon(list(rbind(\n  c(23.1, 68.6),\n  c(23.1, 68.0),\n  c(24.7, 68.0),\n  c(24.7, 68.6),\n  c(23.1, 68.6)\n  \n)))\n\nunwanted_datapoints &lt;- st_sfc(poly_northern_norway, poly_norway_russia, crs = 4326)\n\n# Lesing av csv fil med konverting til sf objekt\nherring_sf &lt;- read_csv(\"HerringData.csv\") |&gt;\n  mutate(\n    across(everything(), as.numeric)\n  ) |&gt;\n  filter(\n    !is.na(lat) & !is.na(lon),\n    lon &gt;= lon_min & lon &lt;= lon_max,\n    lat &gt;= lat_min & lat &lt;= lat_max\n  ) |&gt; \n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326)\n\n# Kutter ut datapunkt i polygonene fra datasettet\ninside_unwanted_datapoints &lt;- st_intersects(herring_sf, unwanted_datapoints, sparse = FALSE)\nherring_sf &lt;- herring_sf[!apply(inside_unwanted_datapoints, 1, any), ]\n\n# Bakgrunnskart\neurope &lt;- ne_countries(continent = \"Europe\", returnclass = \"sf\")\n\n# Plot\nggplot() +\n  geom_sf(data = europe, fill = \"antiquewhite\", color = \"gray60\") +\n  geom_sf(data = herring_sf, color = \"red\", alpha = 0.7, size = 1) +\n  coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +\n  theme_minimal() +\n  labs(\n    title = \"Spatial location of Herring datapoints\",\n    x = \"Longitude\",\n    y = \"Latitude\"\n  )\n\n\n\n\n\n\n\n\nRent og ryddig ferdigbehandlet datasett\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\n\n# Definer yttergrenser\nlon_min &lt;- -21.9\nlon_max &lt;- 49.9\nlat_min &lt;- 56.9\nlat_max &lt;- 77.1\n\n# Lager polygoner av datapunkt som jeg ønsker å fjerne\npoly_norway_russia &lt;- st_polygon(list(rbind(\n  c(11.4, 57.6),\n  c(11.4, 62.8), \n  c(50.0, 62.8),  \n  c(50.0, 57.6),  \n  c(11.4, 57.6)   \n)))\n\npoly_northern_norway &lt;- st_polygon(list(rbind(\n  c(23.1, 68.6),\n  c(23.1, 68.0),\n  c(24.7, 68.0),\n  c(24.7, 68.6),\n  c(23.1, 68.6)\n  \n)))\n\nunwanted_datapoints &lt;- st_sfc(poly_northern_norway, poly_norway_russia, crs = 4326)\n\nherring_data &lt;- read_csv(\"HerringData.csv\") |&gt;\n  mutate(across(everything(), as.numeric)\n  ) |&gt;\n  filter(\n    !is.na(lat) & !is.na(lon),\n    lon &gt;= lon_min & lon &lt;= lon_max,\n    lat &gt;= lat_min & lat &lt;= lat_max\n  ) \n\n# omformer fra df til sf\nherring_sf &lt;- st_as_sf(herring_data, coords = c(\"lon\", \"lat\"), crs = 4326)\n\n# Finner og kutter ut datapunkt fra polygonene i det rå datasettet\ninside_unwanted_datapoints &lt;- st_intersects(herring_sf, unwanted_datapoints, sparse = FALSE)\nherring_data &lt;- herring_data[!apply(inside_unwanted_datapoints, 1, any), ]\n\n# Lagrer ferdig behandlet kode\nsaveRDS(herring_data, file = \"herring_data.rds\")\n\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(sf)\nlibrary(rnaturalearth)\nlibrary(ggplot2)\n\nload(\"herring_data_alt.rda\")\n\n# Plot\nggplot() +\n  geom_sf(data = europe, fill = \"antiquewhite\", color = \"gray60\") +\n  geom_sf(data = herring_sf, color = \"red\", alpha = 0.7, size = 1) +\n  coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +\n  theme_minimal() +\n  labs(\n    title = \"Spatial location of Herring datapoints\",\n    x = \"Longitude\",\n    y = \"Latitude\"\n  )"
  },
  {
    "objectID": "Tetthetskart.html",
    "href": "Tetthetskart.html",
    "title": "Tetthetskart",
    "section": "",
    "text": "I dette dokumentet har jeg kartlagt spredningen av sild fra 1935 - 2019 ved bruk av tetthetskart.\nLesing, begrensning og rydding av csv filen\n\nlibrary(readr)\nlibrary(dplyr)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\n\n# Definer yttergrenser\nlon_min &lt;- -21.9\nlon_max &lt;- 49.9\nlat_min &lt;- 56.9\nlat_max &lt;- 77.1\n\nherring_data &lt;- read_csv(\"HerringData.csv\") |&gt;\n  mutate(across(everything(), as.numeric)\n  ) |&gt;\n  filter(\n    !is.na(lat) & !is.na(lon),\n    lon &gt;= lon_min & lon &lt;= lon_max,\n    lat &gt;= lat_min & lat &lt;= lat_max\n  ) \n\nsave(herring_data, file = \"herring_data.rda\")\n\n# Bruker Europa som bakgrunnskart\neurope &lt;- ne_countries(continent = \"Europe\", returnclass = \"sf\")\n\n\nContour maps\nDet første kartet (map_unique_sampling_points) viser et tetthetskart for spredningen av de unike datapunktene. Koordinatene for plottet er valgte skjønnsmessig for å vise hele spredningsmønsteret. Figuren viser at de fleste unike datapunktene er tatt utenfor Ålesund/Molde og Vestfjorden i Lofoten, med en spredning fra omtrent Egersund til omtrent øst for Kirkenes (Barentshavet). Totale unike datapunkt: 5676\n\nherring_data_no_duplicates &lt;- herring_data |&gt; \n  # Fjerner duplikater\n  distinct(lon, lat, .keep_all = TRUE) |&gt; \n  # konvertet til sf \n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326)\n\n# Henter ut data for plottingen\nherring_coords &lt;- cbind(\n  st_coordinates(herring_data_no_duplicates),\n  as.data.frame(herring_data_no_duplicates)\n) |&gt; #st_coordinates gir standard navn X og Y. Ønsker å beholde lon & lat\n  rename(lon = X, lat = Y)\n\n# Bruker Europa som bakgrunnskart\neurope &lt;- ne_countries(continent = \"Europe\", returnclass = \"sf\")\n\n# Lager plottet\nmap_unique_sampling_points &lt;- ggplot() +\n  geom_sf(data = europe, fill = \"antiquewhite\", color = \"gray60\") +\n  geom_density_2d_filled(\n    data = herring_coords,\n    aes(x = lon, y = lat),\n    alpha = 0.7\n  ) +\n  coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +\n  theme_minimal() +\n  labs(\n    title = \"Herring Data\",\n    subtitle = \"Density of unique sampling points\",\n    x = \"Longitude\",\n    y = \"Latitude\"\n  )\n\nmap_unique_sampling_points\n\n\n\n\n\n\n\n\nDette kartet (map_catches_1935_2019) viser spredningen av individuelle sild fanget fra 1935 - 2019. I dette tidsrommet er majoriteten av sildene fanget i nord- og sør for Ålesund, samt. en økning i Vestfjorden. Totalt fangst: 410 355 individer\n\nherring_data &lt;- herring_data |&gt; \n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326)\n\n# Bruker Europa som bakgrunnskart\neurope &lt;- ne_countries(continent = \"Europe\", returnclass = \"sf\")\n\n# Plotter kartet med punkt størrelse 2, farget blått med transparens på 0.7\nmap_catches_1935_2019 &lt;- ggplot() +\n  geom_sf(data = europe, fill = \"antiquewhite\", color = \"gray60\") +\n  geom_density_2d_filled(\n    data = st_coordinates(herring_data) |&gt;  \n    as.data.frame(),\n    aes(X, Y),\n    alpha = 0.7\n  ) +\n   coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +\n  theme_minimal() +\n   labs(\n    title = \"Herring data\",\n    subtitle = \"Density of Individual Herring catched from 1935 - 2019\",\n    x = \"Longitude\",\n    y = \"Latitude\",\n    fill = \"Point Density\"\n   )\nmap_catches_1935_2019\n\n\n\n\n\n\n\n\nDette kartet (map_catches_1970_2019) viser spredningen av individuelle sild fanget fra 1970 - 2019. På lik måte som for kartet som viser fangst fra 1935 - 2019, så forekommer majoriteten av fangsten utenfor Ålesund. Det er derimot mindre fangst sør for Ålesund, og det virker som det er en trend nordover mot Vestfjoden. Total fangst: 252 314 individer\n\nherring_data &lt;- herring_data |&gt; \n  filter(year &gt;= 1970, year &lt;= 2019) |&gt; \n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326)\n\n# Omdanner geometry kolonne til df med lat/lon\ncoord_df &lt;- st_coordinates(herring_data) |&gt; \n  as.data.frame() |&gt; \n  rename(lon = X, lat = Y)\n\n# Plotter kartet med punkt størrelse 2, farget blått med transparens på 0.7\nmap_catches_1970_2019 &lt;- ggplot() +\n  geom_sf(data = europe, fill = \"antiquewhite\", color = \"gray60\") +\n  geom_density_2d_filled(\n    data = coord_df,  \n    aes(x = lon, y = lat),\n    alpha = 0.7\n  ) +\n   coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +\n  theme_minimal() +\n   labs(\n    title = \"Herring data\",\n    subtitle = \"Density of Individual Herring catched from 1970 - 2019\",\n    x = \"Longitude\",\n    y = \"Latitude\",\n    fill = \"Point Density\"\n   )\nmap_catches_1970_2019\n\n\n\n\n\n\n\n\nDette kartet (map_catches_2000_2019) viser spredningen av individuelle sild fanget fra 2000 - 2019. Ser på lik måte som for 1970 - 2019 kartet at trenden fortsetter nordover, men enda tydeligere. Total fangst: 72 905 individer.\n\nherring_data &lt;- herring_data |&gt; \n  filter(year &gt;= 2000, year &lt;= 2019) |&gt; \n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326)\n\n# Omdanner geometry kolonne til df med lat/lon\ncoord_df &lt;- st_coordinates(herring_data) |&gt; \n  as.data.frame() |&gt; \n  rename(lon = X, lat = Y)\n\n# Plotter kartet med punkt størrelse 2, farget blått med transparens på 0.7\nmap_catches_2000_2019 &lt;- ggplot() +\n  geom_sf(data = europe, fill = \"antiquewhite\", color = \"gray60\") +\n  geom_density_2d_filled(\n    data = coord_df, \n    aes(x = lon, y = lat),\n    alpha = 0.7\n  ) +\n   coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +\n  theme_minimal() +\n   labs(\n    title = \"Herring data\",\n    subtitle = \"Density of Individual Herring catched from 2000 - 2019\",\n    x = \"Longitude\",\n    y = \"Latitude\",\n    fill = \"Point Density\"\n   )\nmap_catches_2000_2019\n\n\n\n\n\n\n\n\nKort oversikt over de ulike kartene laget ovenfor.\n\n#install.packages(\"patchwork\")\nlibrary(patchwork)\n\nmap_unique_sampling_points &lt;- map_unique_sampling_points + labs(title = NULL, subtitle = \"Unique coords\")\nmap_catches_1935_2019 &lt;- map_catches_1935_2019 + labs(title = NULL, subtitle = \"Catches 1935-2019\")\nmap_catches_1970_2019 &lt;- map_catches_1970_2019 + labs(title = NULL, subtitle = \"Catches 1970-2019\")\nmap_catches_2000_2019 &lt;- map_catches_2000_2019 + labs(title = NULL, subtitle = \"Catches 2000-2019\")\n\n(map_unique_sampling_points | map_catches_1935_2019) +\n  plot_annotation(\n    title = \"Herring Density Maps\",\n    subtitle = \"Density Maps displaying distrubution of Herring catches from 1935 - 2019 in different timescales\",\n    tag_levels = 'A'\n  )\n\n\n\n\n\n\n\n(map_catches_1970_2019 | map_catches_2000_2019) +\n    plot_annotation(\n    title = \"Herring Density Maps\",\n    subtitle = \"Density Maps displaying distrubution of Herring catches from 1935 - 2019 in different timescales\",\n    tag_levels = '1'\n    )\n\n\n\n\n\n\n\n\n########################################################################\nPrøver å gå vekk ifra contour plot ved å bruke “binned counts” (ingen interpolasjon).\n\nherring_data &lt;- herring_data |&gt; \n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326)\n\n# Omdanner geometry kolonne til df med lat/lon\ncoord_df &lt;- st_coordinates(herring_data) |&gt; \n  as.data.frame() |&gt; \n  rename(lon = X, lat = Y)\n\nggplot() +\n  geom_sf(data = europe, fill = \"antiquewhite\", color = \"gray60\") +\n  geom_bin2d(\n    data = coord_df,\n    aes(x = lon, y = lat),\n    binwidth = c(0.5, 0.5)  # 0.5° grid (~50 km)\n  ) +\n  scale_fill_viridis_c(trans = \"log\", na.value = \"white\") +\n  coord_sf(xlim = c(0, 37), ylim = c(55, 76)) +\n  theme_minimal() +\n  labs(title = \"Herring data\", subtitle = \"Number of observations per grid cell\")\n\n\n\n\n\n\n\n\n\nherring_data &lt;- herring_data |&gt; \n  filter(year &gt;= 1970, year &lt;= 2019) |&gt; \n  st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326)\n\n# Omdanner geometry kolonne til df med lat/lon\ncoord_df &lt;- st_coordinates(herring_data) |&gt; \n  as.data.frame() |&gt; \n  rename(lon = X, lat = Y)\n\nggplot() +\n  geom_sf(data = europe, fill = \"antiquewhite\", color = \"gray60\") +\n  geom_bin2d(\n    data = coord_df,\n    aes(x = lon, y = lat),\n    binwidth = c(0.5, 0.5)  # 0.5° grid (~50 km)\n  ) +\n  scale_fill_viridis_c(trans = \"log\", na.value = \"white\") +\n  coord_sf(xlim = c(0, 37), ylim = c(55, 76)) +\n  theme_minimal() +\n  labs(title = \"Herring data\", subtitle = \"Number of observations per grid cell\")"
  }
]