right = TRUE    #sørger for interval på formen (a,b])
))
ggplot(herring_grouped_decades, aes(x = decade, y = length)) +
geom_boxplot(fill = "skyblue", alpha = 0.6) +
labs(
title = "Variation in Herring Length across Timeperiode (Decade)",
x = "Decade",
y = "Length (cm)"
) +
theme_minimal()
#| label: Variation in Herring Weight by Timeperiode (Decade)
#| message: false
#| warning: false
library(dplyr)
library(sf)
library(tidyverse)
herring_data <- readRDS("herring_data.rds")
herring_decades_weight <- herring_data |>
mutate(decade = cut(
year,
breaks = c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2019),
labels = c("1935-1945", "1946-1955", "1956-1965", "1966-1975",
"1976-1985", "1986-1995", "1996-2005", "2006-2015", "2016-2019"),
include.lowest = TRUE,  # inkluderer grenseåret 1935
right = TRUE    #sørger for interval på formen (a,b])
))
ggplot(herring_decades_weight, aes(x = decade, y = weight)) +
geom_boxplot(fill = "pink", alpha = 0.6) +
labs(
title = "Variation in Herring Length across Timeperiode (Decade)",
x = "Decade",
y = "Weight (gram)"
) +
theme_minimal()
#| label: Variation in Herring Age across Timeperiode (Decade)
#| message: false
#| warning: false
library(dplyr)
library(sf)
library(tidyverse)
herring_data <- readRDS("herring_data.rds")
herring_decades_age <- herring_data |>
mutate(decade = cut(
year,
breaks = c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2019),
labels = c("1935-1945", "1946-1955", "1956-1965", "1966-1975",
"1976-1985", "1986-1995", "1996-2005", "2006-2015", "2016-2019"),
include.lowest = TRUE,  # include boundary years
right = TRUE    #intervales with form (a,b])
))
ggplot(herring_decades_age, aes(x = decade, y = age)) +
geom_boxplot(fill = "lightgrey", alpha = 0.6) +
labs(
title = "Variation in Herring Length by Timeperiode (Decade)",
x = "Decade",
y = "Age (years)"
) +
scale_y_continuous(n.breaks = 13) + #antall streker på y-akse
theme_minimal()
#| message: false
#| warning: false
library(dplyr)
library(tidyr)
#ifelse statement
#https://www.youtube.com/watch?v=zose3lQAN7o
#https://stackoverflow.com/questions/66173100/how-to-use-ifelse-statements-in-r
herring_data <- readRDS("herring_data.rds")
sex_year_wide <- herring_data |>
mutate(sex_chr = ifelse(is.na(sex), "NA", as.character(sex))) |> # if there is no sex listed, return "NA", else return the data as a character
group_by(year, sex_chr) |>
summarise(n = n(), .groups = "drop") |> # teller antall rader 1,2,4 og NA forekommer
pivot_wider(names_from = sex_chr, values_from = n, values_fill = 0) # Fyller rader som ellers returnerer NA med 0 slik at man summere over radene senere
show(sex_year_wide)
#| label: Amount of males and females per decade
#| message: false
#| warning: false
library(dplyr)
library(ggplot2)
herring_data <- readRDS("herring_data.rds")
# Teller antall individer per tiår og fordelt på kjønn
herring_counts <- herring_data |>
filter(sex %in% c(1, 2)) |>   # beholder kun hankjønn og hunkjønn
mutate(
decade = cut(
year,
breaks = c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2019),
labels = c("1935-1945", "1946-1955", "1956-1965", "1966-1975",
"1976-1985", "1986-1995", "1996-2005", "2006-2015", "2016-2019"),
include.lowest = TRUE
),
sex = recode_factor(sex, `1` = "Male", `2` = "Female") # 1 = Male, 2 = Female
) |>
count(decade, sex)   # teller antall rader for hver kombinasjon
# Plot to linjer – en for menn og en for kvinner
ggplot(herring_counts, aes(x = decade, y = n, color = sex, group = sex)) +
geom_line(linewidth = 1) +
geom_point(size = 2) +
scale_color_manual(
values = c("Male" = "steelblue", "Female" = "pink1")) +
labs(
title = "Amount of males and females per decade",
x = "Decade",
y = "Number of individuals",
color = "Gender"
) +
scale_y_continuous(n.breaks = 20) + #antall streker på y-akse
theme_minimal() +
theme(axis.text.x = element_text(angle = 45), hjust = 1.5)
#| message: false
#| warning: false
library(dplyr)
library(sf)
library(tidyverse)
herring_data <- readRDS("herring_data.rds")
herring_ratio_line <- herring_data |>
filter(sex %in% c(1, 2)) |>
mutate(
decade = cut(
year,
breaks = c(1935, 1945, 1955, 1965, 1975, 1985, 1995, 2005, 2015, 2019),
labels = c("1935-1945", "1946-1955", "1956-1965", "1966-1975",
"1976-1985", "1986-1995", "1996-2005", "2006-2015", "2016-2019"),
include.lowest = TRUE)
) |>
group_by(decade) |>
summarise(
proportion_males = mean(sex == 1, na.rm = TRUE)
)
ggplot(herring_ratio_line, aes(x = decade, y = proportion_males, group = 1)) +
geom_line(color = "steelblue", linewidth = 1) +
geom_point(color = "steelblue", size = 2) +
scale_y_continuous(labels = scales::percent_format()) +
labs(
title = "Proportion of males per decade",
x = "Decade",
y = "Sex ratio of males (%)"
) +
theme_minimal()
#| label: Lagring av csv fil
#| message: false
#| warning: false
library(readr)
library(dplyr)
library(sf)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
# Definer yttergrenser
lon_min <- -21.9
lon_max <- 49.9
lat_min <- 56.9
lat_max <- 77.1
herring_data <- read_csv("HerringData.csv") |>
select(lon, lat) |>
mutate(
lat = as.numeric(lat),
lon = as.numeric(lon)
) |>
# filtrer ut ugyldige verdier
filter(
!is.na(lat) & !is.na(lon),
lon >= lon_min & lon <= lon_max,
lat >= lat_min & lat <= lat_max
)
save(herring_data, file = "herring_data.rda")
# Bruker Europa som bakgrunnskart
europe <- ne_countries(continent = "Europe", returnclass = "sf")
#| label: Density of unique sampling points
#| message: false
#| warning: false
herring_data_no_duplicates <- herring_data |>
# Fjerner duplikater
distinct(lon, lat, .keep_all = TRUE) |>
# konvertet til sf
st_as_sf(coords = c("lon", "lat"), crs = 4326)
# Henter ut data for plottingen
herring_coords <- cbind(
st_coordinates(herring_data_no_duplicates),
as.data.frame(herring_data_no_duplicates)
) |> #st_coordinates gir standard navn X og Y. Ønsker å beholde lon & lat
rename(lon = X, lat = Y)
# Bruker Europa som bakgrunnskart
europe <- ne_countries(continent = "Europe", returnclass = "sf")
# Lager plottet
map_unique_sampling_points <- ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_density_2d_filled(
data = herring_coords,
aes(x = lon, y = lat),
alpha = 0.7
) +
coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +
theme_minimal() +
labs(
title = "Herring Data",
subtitle = "Density of unique sampling points",
x = "Longitude",
y = "Latitude"
)
map_unique_sampling_points
#| label: Density of Individual Herring catched from 1935 - 2019
#| message: false
#| warning: false
herring_data <- herring_data |>
st_as_sf(coords = c("lon", "lat"), crs = 4326)
# Bruker Europa som bakgrunnskart
europe <- ne_countries(continent = "Europe", returnclass = "sf")
# Plotter kartet med punkt størrelse 2, farget blått med transparens på 0.7
map_catches_1935_2019 <- ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_density_2d_filled(
data = st_coordinates(herring_data) |>
as.data.frame(),
aes(X, Y),
alpha = 0.7
) +
coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +
theme_minimal() +
labs(
title = "Herring data",
subtitle = "Density of Individual Herring catched from 1935 - 2019",
x = "Longitude",
y = "Latitude",
fill = "Point Density"
)
map_catches_1935_2019
#| label: Density of Individual Herring catched from 1970 - 2019
#| message: false
#| warning: false
herring_data <- herring_data |>
filter(year >= 1970, year <= 2019) |>
st_as_sf(coords = c("lon", "lat"), crs = 4326)
#| label: Lagring av csv fil
#| message: false
#| warning: false
library(readr)
library(dplyr)
library(sf)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
# Definer yttergrenser
lon_min <- -21.9
lon_max <- 49.9
lat_min <- 56.9
lat_max <- 77.1
herring_data <- read_csv("HerringData.csv") |>
mutate(across(everything(), as.numeric)
) |>
filter(
!is.na(lat) & !is.na(lon),
lon >= lon_min & lon <= lon_max,
lat >= lat_min & lat <= lat_max
)
save(herring_data, file = "herring_data.rda")
# Bruker Europa som bakgrunnskart
europe <- ne_countries(continent = "Europe", returnclass = "sf")
#| label: Density of unique sampling points
#| message: false
#| warning: false
herring_data_no_duplicates <- herring_data |>
# Fjerner duplikater
distinct(lon, lat, .keep_all = TRUE) |>
# konvertet til sf
st_as_sf(coords = c("lon", "lat"), crs = 4326)
# Henter ut data for plottingen
herring_coords <- cbind(
st_coordinates(herring_data_no_duplicates),
as.data.frame(herring_data_no_duplicates)
) |> #st_coordinates gir standard navn X og Y. Ønsker å beholde lon & lat
rename(lon = X, lat = Y)
# Bruker Europa som bakgrunnskart
europe <- ne_countries(continent = "Europe", returnclass = "sf")
# Lager plottet
map_unique_sampling_points <- ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_density_2d_filled(
data = herring_coords,
aes(x = lon, y = lat),
alpha = 0.7
) +
coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +
theme_minimal() +
labs(
title = "Herring Data",
subtitle = "Density of unique sampling points",
x = "Longitude",
y = "Latitude"
)
map_unique_sampling_points
#| label: Density of Individual Herring catched from 1935 - 2019
#| message: false
#| warning: false
herring_data <- herring_data |>
st_as_sf(coords = c("lon", "lat"), crs = 4326)
# Bruker Europa som bakgrunnskart
europe <- ne_countries(continent = "Europe", returnclass = "sf")
# Plotter kartet med punkt størrelse 2, farget blått med transparens på 0.7
map_catches_1935_2019 <- ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_density_2d_filled(
data = st_coordinates(herring_data) |>
as.data.frame(),
aes(X, Y),
alpha = 0.7
) +
coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +
theme_minimal() +
labs(
title = "Herring data",
subtitle = "Density of Individual Herring catched from 1935 - 2019",
x = "Longitude",
y = "Latitude",
fill = "Point Density"
)
map_catches_1935_2019
#| label: Density of Individual Herring catched from 1970 - 2019
#| message: false
#| warning: false
herring_data <- herring_data |>
filter(year >= 1970, year <= 2019) |>
st_as_sf(coords = c("lon", "lat"), crs = 4326)
# Omdanner geometry kolonne til df med lat/lon
coord_df <- st_coordinates(herring_data) |>
as.data.frame() |>
rename(lon = X, lat = Y)
# Plotter kartet med punkt størrelse 2, farget blått med transparens på 0.7
map_catches_1970_2019 <- ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_density_2d_filled(
data = coord_df,
aes(x = lon, y = lat),
alpha = 0.7
) +
coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +
theme_minimal() +
labs(
title = "Herring data",
subtitle = "Density of Individual Herring catched from 1970 - 2019",
x = "Longitude",
y = "Latitude",
fill = "Point Density"
)
map_catches_1970_2019
#| label: Density of Individual Herring catched from 2000 - 2019
#| message: false
#| warning: false
herring_data <- herring_data |>
filter(year >= 2000, year <= 2019) |>
st_as_sf(coords = c("lon", "lat"), crs = 4326)
# Omdanner geometry kolonne til df med lat/lon
coord_df <- st_coordinates(herring_data) |>
as.data.frame() |>
rename(lon = X, lat = Y)
# Plotter kartet med punkt størrelse 2, farget blått med transparens på 0.7
map_catches_2000_2019 <- ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_density_2d_filled(
data = coord_df,
aes(x = lon, y = lat),
alpha = 0.7
) +
coord_sf(xlim = c(lon_min, lon_max), ylim = c(lat_min, lat_max)) +
theme_minimal() +
labs(
title = "Herring data",
subtitle = "Density of Individual Herring catched from 2000 - 2019",
x = "Longitude",
y = "Latitude",
fill = "Point Density"
)
map_catches_2000_2019
#| label: Summary of maps
#| message: false
#| warning: false
#install.packages("patchwork")
library(patchwork)
map_unique_sampling_points <- map_unique_sampling_points + labs(title = NULL, subtitle = "Unique coords")
map_catches_1935_2019 <- map_catches_1935_2019 + labs(title = NULL, subtitle = "Catches 1935-2019")
map_catches_1970_2019 <- map_catches_1970_2019 + labs(title = NULL, subtitle = "Catches 1970-2019")
map_catches_2000_2019 <- map_catches_2000_2019 + labs(title = NULL, subtitle = "Catches 2000-2019")
(map_unique_sampling_points | map_catches_1935_2019) +
plot_annotation(
title = "Herring Density Maps",
subtitle = "Density Maps displaying distrubution of Herring catches from 1935 - 2019 in different timescales",
tag_levels = 'A'
)
(map_catches_1970_2019 | map_catches_2000_2019) +
plot_annotation(
title = "Herring Density Maps",
subtitle = "Density Maps displaying distrubution of Herring catches from 1935 - 2019 in different timescales",
tag_levels = '1'
)
#| label: Coordinates binned
#| message: false
#| warning: false
herring_data <- herring_data |>
st_as_sf(coords = c("lon", "lat"), crs = 4326)
# Omdanner geometry kolonne til df med lat/lon
coord_df <- st_coordinates(herring_data) |>
as.data.frame() |>
rename(lon = X, lat = Y)
ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_bin2d(
data = coord_df,
aes(x = lon, y = lat),
binwidth = c(0.5, 0.5)  # 0.5° grid (~50 km)
) +
scale_fill_viridis_c(trans = "log", na.value = "white") +
coord_sf(xlim = c(0, 37), ylim = c(55, 76)) +
theme_minimal() +
labs(title = "Herring data", subtitle = "Number of observations per grid cell")
#| label: Binned Density of Individual Herring catched from 1970 - 2019
#| message: false
#| warning: false
herring_data <- herring_data |>
filter(year >= 1970, year <= 2019) |>
st_as_sf(coords = c("lon", "lat"), crs = 4326)
# Omdanner geometry kolonne til df med lat/lon
coord_df <- st_coordinates(herring_data) |>
as.data.frame() |>
rename(lon = X, lat = Y)
ggplot() +
geom_sf(data = europe, fill = "antiquewhite", color = "gray60") +
geom_bin2d(
data = coord_df,
aes(x = lon, y = lat),
binwidth = c(0.5, 0.5)  # 0.5° grid (~50 km)
) +
scale_fill_viridis_c(trans = "log", na.value = "white") +
coord_sf(xlim = c(0, 37), ylim = c(55, 76)) +
theme_minimal() +
labs(title = "Herring data", subtitle = "Number of observations per grid cell")
#| message: false
#| warning: false
library(ggplot2)
library(dplyr)
library(maps)
library(stringr)
library(here)
library(tidyverse)
herring_data_raw <- read_csv(
here("HerringData.csv")) #currently stored as chr
herring_data <- herring_data_raw |>
mutate(
lat = as.numeric(lat),
long = as.numeric(lon)
)
#herring_data
View(herring_data)
herring_data_raw <- read.csv(
here("HerringData.csv")) #currently stored as chr
git add .
quarto preview
#| label: Bakgrunnskode
#| message: false
#| warning: false
#| echo: false
install.packages("sf")
library(readr)
library(dplyr)
library(sf)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
# Definer yttergrenser
lon_min <- -21.9
lon_max <- 49.9
lat_min <- 56.9
lat_max <- 77.1
# Lager polygoner av datapunkt som jeg ønsker å fjerne
poly_norway_russia <- st_polygon(list(rbind(
c(11.4, 57.6),
c(11.4, 62.8),
c(50.0, 62.8),
c(50.0, 57.6),
c(11.4, 57.6)
)))
poly_northern_norway <- st_polygon(list(rbind(
c(23.1, 68.6),
c(23.1, 68.0),
c(24.7, 68.0),
c(24.7, 68.6),
c(23.1, 68.6)
)))
unwanted_datapoints <- st_sfc(poly_northern_norway, poly_norway_russia, crs = 4326)
herring_data <- read_csv("HerringData.csv") |>
mutate(across(everything(), as.numeric)
) |>
filter(
!is.na(lat) & !is.na(lon),
lon >= lon_min & lon <= lon_max,
lat >= lat_min & lat <= lat_max
)
# omformer fra df til sf
herring_sf <- st_as_sf(herring_data, coords = c("lon", "lat"), crs = 4326)
# Finner og kutter ut datapunkt fra polygonene i det rå datasettet
inside_unwanted_datapoints <- st_intersects(herring_sf, unwanted_datapoints, sparse = FALSE)
# Oppdaterer både sf og df objektene
herring_data <- herring_data[!apply(inside_unwanted_datapoints, 1, any), ]
herring_sf   <- herring_sf[!apply(inside_unwanted_datapoints, 1, any), ]
# Bakgrunnskart
europe <- ne_countries(continent = "Europe", returnclass = "sf")
# Lagrer den fullstendige filen inkludert datasett, grenser og polygoner
save(
herring_data, herring_sf, lon_min, lon_max, lat_min, lat_max, unwanted_datapoints,
file = "herring_data_alt.rda")
# Lagrer kun datasettet
saveRDS(herring_data, file = "herring_data.rds")
install.packages("sf")
quarto render
